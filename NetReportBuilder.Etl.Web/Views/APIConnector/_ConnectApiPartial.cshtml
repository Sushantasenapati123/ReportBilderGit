

@model NetReportBuilder.Etl.Core.ApiInfo

@{
    ViewData["Title"] = "Api Connector";
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    var methodTypes = ViewBag.MethodTypes;
    var apitypes = ViewBag.apiTypes;
}

<style>
    .report-group {
        border: 1px solid #ddd;
        padding: 10px;
        border-radius: 5px;
        background-color: #f9f9f9;
        margin-top: 20px;
    }

    .report-block {
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* Ensure maximum 3 blocks per row */
        gap: 10px;
    }

    .report-item {
        border: 1px solid #ddd;
        border-color: darkslategray;
        padding: 10px;
        border-radius: 5px;
        background-color: #fff;
        text-align: center;
        cursor: pointer;
    }

        .report-item img {
            max-width: 100%;
            height: auto;
            margin-bottom: 10px;
        }

        .report-item h3 {
            margin: 0;
            font-size: 1.1em;
            font-weight: bold;
        }

        .report-item:hover {
            background-color: antiquewhite;
        }

    table td {
        border: 1px solid black;
        padding: 4px 12px;
    }

    .scrollable-textarea {
        width: 100%;
        height: 200px;
        overflow: auto;
        resize: none;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .control-label {
        display: inline-block;
        margin-bottom: .5rem;
        font-weight: 600;
    }

    .text-danger {
        color: red;
    }

    .btn-primary {
        background-color: green;
        border-color: green;
    }

    .btn-danger {
        background-color: blue;
        border-color: blue;
    }

    #dataGridViewContainer {
        width: 100%; /* Adjust as needed */
        height: 200px; /* Adjust as needed */
        overflow: auto;
        border: 1px solid #252525;
        /* Optional: add a border */
    }

    #dataGridview {
        width: 100%;
        border-collapse: collapse;
    }

        #dataGridview th, #dataGridview td {
            border: 1px solid #ddd;
            padding: 8px;
        }
</style>

<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<div class="row" style="padding:10px;">
    <div class="col-md-12 col-sm-12">
        <div class="card">
            <div class="card-header">
                <h2>Connect to API</h2>
            </div>
            <div class="row">
                <div class="card-body">
                    <form id="apiForm">
                        <div class="row">
                            <div class="col-sm-4 col-md-2">
                                <div class="form-group">
                                    <label class="control-label form-label">
                                        <span>Method Type</span>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <select id="ddlMethodtype" class="form-control" style="border-color:black;border-width:2px;border-style:solid;margin:5px;">
                                        <option value="Select">Select</option>
                                        @foreach (var method in methodTypes)
                                        {
                                            <option value="@method">@method</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-xl-2 col-md-2">
                                <label class="control-label">
                                    <strong>End Point</strong>
                                    <span class="text-danger">*</span>
                                </label>
                                <input type="text" id="txtendpoint" style="border-color:black;border-width:2px;border-style:solid;margin:5px;" class="form-control">
                            </div>
                            <div class="col-xl-2 col-md-2">
                                <div class="form-group">
                                    <label class="control-label form-label">
                                        <strong>ApiType</strong>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <select id="ddlaitype" class="form-control" style="border-color:black;border-width:2px;border-style:solid;margin:5px;">
                                        <option value="Select">Select</option>
                                        @foreach (var apitype in apitypes)
                                        {
                                            <option value="@apitype">@apitype</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-xl-6 col-md-7">
                                <label class="control-label" id="lblParameters" style="display:none;">
                                    <b>Parameters</b>
                                </label>
                                <label class="control-label" id="lblBody" style="display:none;">
                                    <b>Body</b>
                                </label>
                                <div id="bindparameters" style="min-height:200px;overflow:scroll; overflow-x:hidden;overflow-y:auto;">
                                    <div style="height: 200px; max-height: 200px; overflow-y: auto; overflow-x: hidden; margin: 5px;">
                                        <table id="tblParameters" class="table table-bordered" style="border-color: black; border-width: 2px; border-style: solid; margin: 5px;">
                                            <thead>
                                                <tr>
                                                    <th style="text-align: center;">Key</th>
                                                    <th style="text-align: center;">Value</th>
                                                    <th style="text-align: center;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tbody"></tbody>
                                        </table>
                                        <textarea id="textareaParameters" style="display: none; border-color: black; border-width: 2px; border-style: solid; margin: 5px; height: 170px;" class="form-control" rows="5"></textarea>
                                    </div>


                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div>
                                <button type="button" class="btn btn-primary mb-1" id="btnSend" style="top:38px;">Send</button>
                                <button type="button" class="btn btn-danger mb-1" id="btnSave" style="top: 4px;">Next</button>

                            </div>
                        </div>
                        <div class="row">

                            <div class="col-12 col-md-3 col-xl-3">
                                <div class="form-group">
                                    <label class="control-label">
                                        <strong>Result</strong>
                                        <span class="text-danger">*</span>
                                    </label>
                                    <textarea class="scrollable-textarea" style="border-color:black;border-width:2px;border-style:solid;" disabled id="apiresult"></textarea>
                                </div>
                            </div>
                            <div class="col-12 col-md-3 col-xl-3">
                                <div class="form-group">
                                    <label class="control-label">
                                        <strong></strong>
                                        @*<span class="text-danger">*</span>*@
                                    </label>
                                    <div id="dataGridViewContainer" style="border-color:black;border-width:2px;border-style:solid;margin:5px;">
                                        <table id="dataGridview" class="table table-bordered">
                                            <thead>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>
<script src="~/js/jquery-3.3.1.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    //-------------------------------------------------------
    var rowIdx = 0;
    // Function to add a row
    function addRow() {
        $('#tbody').append(`
                <tr id="R${++rowIdx}">
                    <td class="row-index text-center" style="text-align: center; vertical-align: middle;">
                        <input id="txtKeyParam${rowIdx}" style="width:186px;display: block; margin: 0 auto;" class="inputs form-control m-input">
                    </td>
                    <td class="row-index text-center" style="text-align: center; vertical-align: middle;">
                        <input id="txtValueParam${rowIdx}" style="width:186px;display: block; margin: 0 auto;" class="inputs form-control m-input">
                    </td>
                    <td class="text-center" style="text-align: center; vertical-align: middle;">
                       <button class="btn btn-primary add" type="button">Add</button>

                        <button class="btn btn-danger remove" type="button">Remove</button>
                    </td>
                </tr>
         `);
    }

    $(document).ready(function () {
        lblbind();
        // Add the first row when the page loads
        addRow();
        toggleParameterGridView();
    });

    $('#tbody').on('click', '.add', function () {
        addRow();
    });
    // jQuery button click event to remove a row.
    $('#tbody').on('click', '.remove', function () {
        var currentRow = $(this).closest('tr');

        // Check if the current row is the first row
        if (currentRow.is(':first-child')) {
            alert("The first row cannot be removed.");
            return;
        }

        var child = currentRow.nextAll();

        // Iterating across all the rows
        // obtained to change the index
        child.each(function () {
            var id = $(this).attr('id');
            var idx = $(this).children('.row-index').children('p');
            var dig = parseInt(id.substring(1));
            idx.html(`Row ${dig - 1}`);
            $(this).attr('id', `R${dig - 1}`);
        });
        // Removing the current row.
        $(this).closest('tr').remove();
        // Decreasing total number of rows by 1.
        rowIdx--;
    });
    //Function for the send request api
    $('#btnSend').click(function () {

        if ($('#ddlMethodtype').val() == "Select") {
            alert("Please select Method Type.");
            return;
        }
        if ($('#txtendpoint').val() == "") {
            alert("Please provide the Api endpoint");
            return;
        }
        if ($('#ddlaitype').val() == "Select") {
            alert("Please select the Parameter type.");
            return;
        }
        if (document.getElementById('tbody') == null
            ||
            document.getElementById('tbody').rows == null
            || document.getElementById('tbody').rows.length === 0) {
            alert("Table data is required.");
            return;
        }
        if ($('#ddlaitype').val() == "Raw" && $('#textareaParameters').val() == "") {
            alert("send parameters as json are required.");
            return;
        }

        var apiUrl = $('#txtendpoint').val();
        var selectedMethod = $('#ddlMethodtype').val();
        var apiType = $('#ddlaitype').val();
        var tableData = [];
        var tbl = document.getElementById('tbody');
        var rawparams = $('#textareaParameters').val();

        for (var i = 0; i < tbl.rows.length; i++) {
            var item1 = {};
            item1.key = tbl.rows[i].cells[0].querySelector('input').value;
            item1.value = tbl.rows[i].cells[1].querySelector('input').value;
            tableData.push(item1);
        }
        $.ajax({
            url: '/APIConnector/Invoke',
            type: 'POST',
            data: {
                apiUrl: apiUrl,
                selectedMethod: selectedMethod,
                apiType: apiType,
                tableData: JSON.stringify(tableData),
                rawparam: rawparams
            },
            success: function (data) {
                $('#apiresult').val(JSON.stringify(data, null, 2));
                bindDataGridView(data);
            },
            error: function (xhr, status, error) {
                // $('#apiresult').val('Error: ' + xhr.responseText);
                alert('Error: ' + xhr.responseText);
            }
        });
    });

    $('#btnSave').click(function () {
        var entity = {
            Configuration: {
                DataPipeLineName: $('#datasrcnm').val(),
                MethodType: $('#ddlMethodtype').val(),
                EndPoint: $('#txtendpoint').val(),
                ParameterType: $('#ddlaitype').val(),
                Parameters: [],
                Response: $('#apiresult').val()
            }
        };
        var apitype = $('#ddlaitype').val();
        if (apitype == "Raw") {
            var rawJson = $('#textareaParameters').val();

            if (rawJson.trim() !== "") {
                try {
                    var parsedParameters = JSON.parse(rawJson);

                    for (var key in parsedParameters) {
                        if (parsedParameters.hasOwnProperty(key)) {
                            entity.Configuration.Parameters.push({ Pkey: key, Pvalue: parsedParameters[key] });
                        }
                    }
                } catch (e) {
                    /* $('#apiresult').val('Error parsing JSON: ' + e.message);*/
                    return;
                }
            }

        }
        else {
            var tbl = document.getElementById('tbody');
            for (var i = 0; i < tbl.rows.length; i++) {
                var item = {};
                item.Pkey = tbl.rows[i].cells[0].querySelector('input').value;
                item.Pvalue = tbl.rows[i].cells[1].querySelector('input').value;
                if (item.Pkey != "" && item.Pvalue != "") {
                    entity.Configuration.Parameters.push(item);
                }

            }

        }
        if ($('#apiresult').val() == "") {
            alert("Click the send button to get response  ");
            return;
        }
        else if ($('#dataGridview tbody tr').length === 0) {
            alert("Please add at least one parameter to the data grid.");
            return;
        }
        $.ajax({
            url: '/APIConnector/SubmitApi', // Your endpoint for the Submit action
            type: 'POST',
            data: entity,
            success: function (response) {
                debugger;
                parent.ClosePopupFromChild("The Api was successfully configured");
                //location.href = "/DataMapping/Index"
                //  $('#apiresult').val('Submit Successful: ' + JSON.stringify(response, null, 2));
            },
            error: function (xhr, status, error) {
                // $('#apiresult').val('Error: ' + xhr.responseText);
                //alert('Error: ' + xhr.responseText);
                parent.ClosePopupFromChild("There was an issue while connecting to the API");
            }
        });
    });
    //datagrid bind


    function bindDataGridView(data) {
        if (!Array.isArray(data) || data.length === 0) {
            console.error("Invalid data structure or empty data array");
            return;
        }

        var tablehead = $('#dataGridview thead');
        tablehead.empty(); // Clear the table head

        // Extract the header from the first data item
        var headers = Object.keys(data[0]);
        var rowHeaderhtml = '<tr style="font-weight:bold;border: 1px solid black; background-color: #EEE;">';
        headers.forEach(header => {
            rowHeaderhtml += '<td>' + header + '</td>';
        });
        rowHeaderhtml += '</tr>';
        tablehead.append(rowHeaderhtml);

        var tablebody = $('#dataGridview tbody');
        tablebody.empty(); // Clear the table body
        data.forEach(row => {
            var rowBodyhtml = '<tr>';
            headers.forEach(header => {
                rowBodyhtml += '<td>' + (row[header] !== undefined ? row[header] : '') + '</td>';
            });
            rowBodyhtml += '</tr>';
            tablebody.append(rowBodyhtml);
        });
    }
    //-----------

    //function toggleParameterGridView() {
    //    var selectedApiType = $('#ddlaitype').val();
    //    if (selectedApiType === "Select" || selectedApiType === "NoParameters") {
    //        // Clear the data in the input fields
    //        $('#bindparameters').find('input').val('');

    //        $('#bindparameters').find('input').attr('disabled', 'disabled');
    //        $('#bindparameters').find('.add, .remove').attr('disabled', 'disabled');
    //    } else {
    //        $('#bindparameters').find('input').removeAttr('disabled');
    //        $('#bindparameters').find('.add, .remove').removeAttr('disabled');
    //    }
    //}
    function toggleParameterGridView() {
        var selectedApiType = $('#ddlaitype').val();
        if (selectedApiType === "Select" || selectedApiType === "NoParameters") {
            // Clear the data in the input fields
            $('#bindparameters').find('input').val('');
            $('#textareaParameters').val('');
            $('#bindparameters').find('input').attr('disabled', 'disabled');
            $('#bindparameters').find('.add, .remove').attr('disabled', 'disabled');
            $('#tblParameters').show();
            $('#textareaParameters').hide();
        } else if (selectedApiType === "Raw") {
            $('#bindparameters').find('input').val('');
            $('#tblParameters').hide();
            $('#textareaParameters').show();
        } else {
            $('#tblParameters').show();
            $('#textareaParameters').val('');
            $('#textareaParameters').hide();
            $('#bindparameters').find('input').removeAttr('disabled');
            $('#bindparameters').find('.add, .remove').removeAttr('disabled');
        }
    }
    //-------------------------------------------------------------------------
    $('#ddlaitype').change(function () {
        lblbind();
        toggleParameterGridView();
    });
    function lblbind() {
        var apityp = $('#ddlaitype').val();
        if (apityp == "Raw") {
            $('#lblParameters').hide();
            $('#lblBody').show();
        } else {
            $('#lblParameters').show();
            $('#lblBody').hide();
        }
    }
</script>

